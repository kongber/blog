import{_ as s,c as a,a as e,o as n}from"./app-CxwMiOet.js";const l={};function h(t,i){return n(),a("div",null,i[0]||(i[0]=[e(`<h2 id="what-是什么" tabindex="-1"><a class="header-anchor" href="#what-是什么"><span>What（是什么）</span></a></h2><p>OFB是一种将分组密码转换为自同步流密码的工作模式，通过加密反馈输出生成密钥流。</p><h3 id="核心要素" tabindex="-1"><a class="header-anchor" href="#核心要素"><span>核心要素</span></a></h3><ul><li>流加密模式</li><li>使用初始化向量(IV)</li><li>反馈机制</li><li>自同步特性</li></ul><h2 id="why-为什么" tabindex="-1"><a class="header-anchor" href="#why-为什么"><span>Why（为什么）</span></a></h2><h3 id="解决问题" tabindex="-1"><a class="header-anchor" href="#解决问题"><span>解决问题</span></a></h3><ul><li>需要流加密的场景</li><li>避免错误传播</li><li>预处理密钥流需求</li></ul><h3 id="技术优势" tabindex="-1"><a class="header-anchor" href="#技术优势"><span>技术优势</span></a></h3><ul><li>可预处理密钥流</li><li>错误不传播</li><li>实现简单</li><li>支持实时加密</li></ul><h2 id="when-何时" tabindex="-1"><a class="header-anchor" href="#when-何时"><span>When（何时）</span></a></h2><h3 id="适用场景" tabindex="-1"><a class="header-anchor" href="#适用场景"><span>适用场景</span></a></h3><ul><li>实时通信加密</li><li>卫星通信</li><li>需要预处理场景</li><li>低延迟需求</li></ul><h3 id="发展历程" tabindex="-1"><a class="header-anchor" href="#发展历程"><span>发展历程</span></a></h3><ul><li>1977年：首次提出</li><li>1980年：NIST标准化</li><li>现在：特定领域使用</li></ul><h2 id="how-如何" tabindex="-1"><a class="header-anchor" href="#how-如何"><span>How（如何）</span></a></h2><h3 id="算法实现" tabindex="-1"><a class="header-anchor" href="#算法实现"><span>算法实现</span></a></h3><ol><li><p>初始化：</p><ul><li>设置IV</li><li>初始化反馈寄存器</li></ul></li><li><p>加密/解密：</p><ul><li>加密反馈寄存器</li><li>输出作为密钥流</li><li>与明文/密文异或</li><li>更新反馈寄存器</li></ul></li></ol><h3 id="伪代码" tabindex="-1"><a class="header-anchor" href="#伪代码"><span>伪代码</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 加密/解密（过程相同）</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">register </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> IV</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">for</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> data </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">in</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> input_stream</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    key_stream </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> encrypt</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">register</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    output </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> data </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">^</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> key_stream</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    register </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> key_stream</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19)]))}const p=s(l,[["render",h]]),d=JSON.parse('{"path":"/article/40cjg59p/","title":"ofb","lang":"zh-CN","frontmatter":{"title":"ofb","createTime":"2025/04/11 14:31:11","permalink":"/article/40cjg59p/"},"readingTime":{"minutes":0.91,"words":274},"git":{"updatedTime":1747298275000,"contributors":[{"name":"Kongber","username":"Kongber","email":"kongmongolia@gmail.com","commits":5,"avatar":"https://avatars.githubusercontent.com/Kongber?v=4","url":"https://github.com/Kongber"},{"name":"Kong","username":"Kong","email":"kongmongolia@gmail.com","commits":1,"avatar":"https://avatars.githubusercontent.com/Kong?v=4","url":"https://github.com/Kong"}]},"filePathRelative":"notes/C.safe/C1.cipher/algorithm/ofb.md","headers":[],"categoryList":[{"id":"4358b5","sort":10000,"name":"notes"},{"id":"63b13f","sort":10005,"name":"C.safe"},{"id":"42ad35","sort":10010,"name":"C1.cipher"},{"id":"7adf9c","sort":10007,"name":"algorithm"}]}');export{p as comp,d as data};
