import{_ as r,c as u,a as s,b as l,d as n,w as t,r as o,o as d,e as a}from"./app-G7cDrxo-.js";const p={};function h(m,i){const e=o("RouteLink");return d(),u("div",null,[i[6]||(i[6]=s('<p>架构设计是软件工程中的核心活动，它关注系统的整体结构和关键特性。本章节主要介绍软件架构设计的核心概念和方法。</p><h2 id="架构设计基础" tabindex="-1"><a class="header-anchor" href="#架构设计基础"><span>架构设计基础</span></a></h2><ul><li><p>架构设计原则</p><ul><li>高内聚低耦合</li><li>单一职责</li><li>开闭原则</li><li>依赖倒置</li><li>接口隔离</li></ul></li><li><p>架构质量属性</p><ul><li>可用性</li><li>可维护性</li><li>可扩展性</li><li>安全性</li><li>性能</li></ul></li></ul><h2 id="常见架构风格" tabindex="-1"><a class="header-anchor" href="#常见架构风格"><span>常见架构风格</span></a></h2>',4)),l("ul",null,[l("li",null,[l("p",null,[n(e,{to:"/notes/B.se/B3.design/architecture/styles/layered.html"},{default:t(()=>i[0]||(i[0]=[a("分层架构")])),_:1})]),i[1]||(i[1]=l("ul",null,[l("li",null,"表现层"),l("li",null,"业务层"),l("li",null,"持久层")],-1))]),l("li",null,[l("p",null,[n(e,{to:"/notes/B.se/B3.design/architecture/styles/microservices.html"},{default:t(()=>i[2]||(i[2]=[a("微服务架构")])),_:1})]),i[3]||(i[3]=l("ul",null,[l("li",null,"服务拆分"),l("li",null,"服务治理"),l("li",null,"服务通信")],-1))]),l("li",null,[l("p",null,[n(e,{to:"/notes/B.se/B3.design/architecture/styles/event-driven.html"},{default:t(()=>i[4]||(i[4]=[a("事件驱动架构")])),_:1})]),i[5]||(i[5]=l("ul",null,[l("li",null,"事件源"),l("li",null,"事件总线"),l("li",null,"事件处理")],-1))])]),i[7]||(i[7]=s('<h2 id="架构设计方法" tabindex="-1"><a class="header-anchor" href="#架构设计方法"><span>架构设计方法</span></a></h2><ul><li><p>需求分析</p><ul><li>功能需求</li><li>非功能需求</li><li>约束条件</li></ul></li><li><p>架构决策</p><ul><li>技术选型</li><li>框架选择</li><li>部署策略</li></ul></li><li><p>架构评估</p><ul><li>评估方法</li><li>评估指标</li><li>风险分析</li></ul></li></ul><h2 id="架构文档" tabindex="-1"><a class="header-anchor" href="#架构文档"><span>架构文档</span></a></h2><ul><li><p>架构视图</p><ul><li>逻辑视图</li><li>开发视图</li><li>物理视图</li><li>进程视图</li></ul></li><li><p>设计决策</p><ul><li>决策记录</li><li>权衡分析</li><li>演进策略</li></ul></li></ul><h2 id="最佳实践" tabindex="-1"><a class="header-anchor" href="#最佳实践"><span>最佳实践</span></a></h2><ul><li>架构重构</li><li>性能优化</li><li>安全加固</li><li>可用性提升</li><li>扩展性设计</li></ul><h2 id="参考资源" tabindex="-1"><a class="header-anchor" href="#参考资源"><span>参考资源</span></a></h2><ul><li><a href="https://icyfenix.cn" target="_blank" rel="noopener noreferrer">凤凰架构</a></li><li>《软件架构设计：大型网站技术架构与业务架构融合之道》</li><li>《架构整洁之道》</li></ul>',8))])}const g=r(p,[["render",h]]),f=JSON.parse('{"path":"/notes/se/935dv6jg/","title":"README","lang":"zh-CN","frontmatter":{"title":"README","createTime":"2025/04/23 15:43:54","permalink":"/notes/se/935dv6jg/"},"readingTime":{"minutes":1.12,"words":337},"git":{"updatedTime":1747214024000,"contributors":[{"name":"Kongber","username":"Kongber","email":"kongmongolia@gmail.com","commits":5,"avatar":"https://avatars.githubusercontent.com/Kongber?v=4","url":"https://github.com/Kongber"}]},"filePathRelative":"notes/B.se/B3.design/architecture/README.md","headers":[],"categoryList":[{"id":"4358b5","sort":10000,"name":"notes"},{"id":"6156bd","sort":10001,"name":"B.se"},{"id":"54572d","sort":10002,"name":"B3.design"},{"id":"54b303","sort":10010,"name":"architecture"}]}');export{g as comp,f as data};
