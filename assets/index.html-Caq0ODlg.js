import{_ as s,c as l,a as e,o as a}from"./app-CxwMiOet.js";const t={};function n(h,i){return a(),l("div",null,i[0]||(i[0]=[e(`<h2 id="_1-pkcs11-简介" tabindex="-1"><a class="header-anchor" href="#_1-pkcs11-简介"><span>1. PKCS11 简介</span></a></h2><p>PKCS11是一种用于安全访问硬件加密设备的应用程序接口（API）标准。它定义了一组函数和数据结构，使应用程序能够与硬件加密设备进行交互，执行加密、解密、签名和验证等操作。</p><h2 id="_2-pkcs11-的核心概念" tabindex="-1"><a class="header-anchor" href="#_2-pkcs11-的核心概念"><span>2. PKCS11 的核心概念</span></a></h2><h3 id="_2-1-基础组件" tabindex="-1"><a class="header-anchor" href="#_2-1-基础组件"><span>2.1 基础组件</span></a></h3><ul><li>槽位（Slot）：代表物理或逻辑设备接口，如USB读卡器的插槽。 <ul><li>单个 USB Key 设备: 1 个 Slot</li><li>智能卡读卡器: 可能有 1 ~ 4 个 Slot</li><li>软件 HSM: 1 ~ 2 个 Slot</li><li>硬件 HSM: 多个 Slot, 但一般不会超过 10 个 Slot</li></ul></li><li>令牌（Token）：槽位上的密码设备，如HSM或智能卡。</li><li>会话（Session）：应用程序与令牌之间的通信通道，分为&quot;公共会话&quot;和&quot;用户会话&quot;。</li><li>对象（Object）：令牌中存储的数据实体，如密钥、证书、数据对象。对象通过属性（Attribute）定义其类型和访问权限。 <ul><li>访问权限：共有对象，私有对象。</li><li>状态类型：临时会话，持久会话。</li></ul></li><li>用户（User）：与令牌进行交互的实体，如管理员、普通用户。 <ul><li>Security Officer (管理员)：初始化令牌，设置密码，重置密码，更新固件等管理操作。</li><li>Normal Users (普通用户)：生成密钥，签名，加密，解密，证书管理，密钥管理。</li></ul></li></ul><h3 id="_2-2-调用流程" tabindex="-1"><a class="header-anchor" href="#_2-2-调用流程"><span>2.2 调用流程</span></a></h3><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">A</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">C_GetFunctionList</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> --&gt; B</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">C_Initialize</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">B --&gt; C</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">C_GetSlotList</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">C --&gt; D</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">C_OpenSession</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">D --&gt; E</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">C_Login</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">E --&gt; F</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">C_Logout</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">F --&gt; G</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">C_CloseSession</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">G --&gt; H</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">C_Finalize</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-softhsm2" tabindex="-1"><a class="header-anchor" href="#_3-softhsm2"><span>3. SoftHsm2</span></a></h2><p>SoftHsm2是一个开源的密码设备软件实现，提供了PKCS11接口，用于管理和使用密码设备。它支持多种硬件加密设备，如HSM、智能卡等。</p><h3 id="_3-1-安装和配置" tabindex="-1"><a class="header-anchor" href="#_3-1-安装和配置"><span>3.1 安装和配置</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> apt</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> softhsm2</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">softhsm2-util</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --version</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-pkcs11-实现和使用" tabindex="-1"><a class="header-anchor" href="#_4-pkcs11-实现和使用"><span>4. PKCS11 实现和使用</span></a></h2><h3 id="_4-1-工具安装" tabindex="-1"><a class="header-anchor" href="#_4-1-工具安装"><span>4.1 工具安装</span></a></h3><p>使用 opensc 安装 操作 pkcs11 模块。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> apt</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> opensc</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_4-2-模块管理" tabindex="-1"><a class="header-anchor" href="#_4-2-模块管理"><span>4.2 模块管理</span></a></h3><p>使用 softHsm2 管理 pkcs11 模块。(其他硬件设备模块类似)</p><ul><li>查看模块信息: <ul><li>pkcs11-tool --show-info --module /usr/local/lib/softhsm/libsofthsm2.so</li></ul></li><li>查看令牌信息: <ul><li>pkcs11-tool --list-slots --module /usr/local/lib/softhsm/libsofthsm2.so</li></ul></li><li>初始化令牌: <ul><li>pkcs11-tool --init-token --slot 0 --label &quot;My Token&quot; --so-pin 12345678 --module /usr/local/lib/softhsm/libsofthsm2.so</li></ul></li><li>初始化用户: <ul><li>pkcs11-tool --init-pin --slot 0x01 --so-pin 12345678 --pin 12345678 --module /usr/local/lib/softhsm/libsofthsm2.so</li></ul></li><li>查看对象信息: <ul><li>pkcs11-tool --list-objects --module /usr/local/lib/softhsm/libsofthsm2.so</li></ul></li><li>查看对象信息(private): <ul><li>pkcs11-tool --list-objects --login --pin 12345678 --module /usr/local/lib/softhsm/libsofthsm2.so</li></ul></li><li>删除对象信息: <ul><li>pkcs11-tool --delete-object --label=&quot;vehiclepubk&quot; --type=data --module /usr/local/lib/softhsm/libsofthsm2.so</li></ul></li><li>生成密钥对信息: <ul><li>pkcs11-tool --generate-key-pair --key-type RSA:2048 --id 01 --label &quot;My Key Pair&quot; --module /usr/local/lib/softhsm/libsofthsm2.so</li></ul></li><li>签名操作: <ul><li>pkcs11-tool --sign --mechanism SHA256-RSA-PKCS --input input_file --output signed_file --login --pin 12345678 --module /usr/local/lib/softhsm/libsofthsm2.so</li></ul></li><li>验证签名: <ul><li>pkcs11-tool --verify --mechanism SHA256-RSA-PKCS --input input_file --signature signed_file --login --pin 12345678 --module /usr/local/lib/softhsm/libsofthsm2.so</li></ul></li><li>加密操作: <ul><li>pkcs11-tool --encrypt --mechanism RSA-OAEP --input input_file --output encrypted_file --login --pin 12345678 --module /usr/local/lib/softhsm/libsofthsm2.so</li></ul></li><li>解密操作: <ul><li>pkcs11-tool --decrypt --mechanism RSA-OAEP --input encrypted_file --output decrypted_file --login --pin 12345678 --module /usr/local/lib/softhsm/libsofthsm2.so</li></ul></li></ul><h3 id="_4-3-常用函数" tabindex="-1"><a class="header-anchor" href="#_4-3-常用函数"><span>4.3 常用函数</span></a></h3><ul><li>C_Initialize：这个函数用于初始化PKCS#11库和密码设备。它可能包括设置库的运行时环境、加载支持的密码设备模块，以及进行其他初始化操作。</li><li>C_Finalize：C_Finalize函数用于终止PKCS#11库和密码设备的操作。它通常包括资源的释放、会话的关闭和清理操作。</li><li>C_GetFunctionList：这个函数用于获取PKCS#11库中可用的函数列表，以供应用程序进行函数调用。</li><li>C_GetInfo：C_GetInfo函数用于获取PKCS#11库的信息，如库的版本、制造商、支持的机制等。</li><li>C_GetSlotList：这个函数用于获取密码设备中可用的槽（slots）列表，每个槽对应一个物理或逻辑插槽，通常包含一个密码设备模块。</li><li>C_GetTokenInfo：C_GetTokenInfo函数用于获取特定槽中的密码设备信息，包括制造商、模块名称、序列号等。</li><li>C_OpenSession：C_OpenSession函数用于建立与密码设备的会话，这是进行密码学操作的前提，会话可以有不同的安全级别和属性。</li><li>C_CloseSession：C_CloseSession函数用于关闭会话，确保资源的正确释放，会话的安全结束以及操作的完整性。</li><li>C_Login：C_Login函数用于用户的身份验证，以获得对密码设备的访问权限。这可以包括PIN码的验证或其他身份验证机制。</li><li>C_Logout：C_Logout函数用于用户退出会话，以保护密码设备免受未经授权的访问。</li><li>C_GenerateKey：这个函数用于生成密钥，可以是对称密钥或非对称密钥，具体取决于指定的机制和参数。</li><li>C_Encrypt和C_Decrypt：这些函数分别用于加密和解密数据，可以使用指定的密钥和机制进行操作。</li><li>C_Sign和C_Verify：这些函数用于数字签名和验证数字签名，以确保数据的完整性和来源验证。</li><li>C_Digest：C_Digest函数用于计算数据的摘要，通常用于数据完整性验证。</li><li>C_GenerateRandom：C_GenerateRandom函数用于生成高质量的随机数，用于密钥生成、初始化向量生成等密码学操作。</li></ul><h2 id="_5-参考资料" tabindex="-1"><a class="header-anchor" href="#_5-参考资料"><span>5. 参考资料</span></a></h2><ul><li>规范 <ul><li><a href="https://docs.oasis-open.org/pkcs11/pkcs11-base/v2.40/errata01/os/pkcs11-base-v2.40-errata01-os-complete.html" target="_blank" rel="noopener noreferrer">PKCS #11 加密令牌接口基本规范版本 2.40</a></li><li><a href="https://www.rfc-editor.org/rfc/rfc7512" target="_blank" rel="noopener noreferrer">PKCS #11 URI Scheme</a></li></ul></li><li>代码 <ul><li><a href="https://github.com/embetrix/pkcs11-provider-example" target="_blank" rel="noopener noreferrer">PKCS #11 provider 应用</a></li><li><a href="https://github.com/OpenSC/OpenSC/wiki/Using-pkcs11-tool-and-OpenSSL" target="_blank" rel="noopener noreferrer">PKCS #11 Tool and Opensssl</a></li></ul></li><li>资料 <ul><li><a href="https://www.youtube.com/watch?v=zTt9wp5vXDE&amp;list=PLgBMtP0_D_aec5yMhAmcjmeFoJGwfgLKy" target="_blank" rel="noopener noreferrer">PKCS #11 youtube</a></li><li><a href="https://www.cryptsoft.com/pkcs11doc/v220/" target="_blank" rel="noopener noreferrer">Cryptographic Token Interface Standard (https://www.cryptsoft.com/pkcs11doc/v220/)</a></li></ul></li></ul>`,22)]))}const r=s(t,[["render",n]]),p=JSON.parse('{"path":"/article/rvqjrh41/","title":"PKCS11","lang":"zh-CN","frontmatter":{"title":"PKCS11","createTime":"2024/01/10","permalink":"/article/rvqjrh41/"},"readingTime":{"minutes":4.4,"words":1319},"git":{"updatedTime":1750173367000,"contributors":[{"name":"Kongber","username":"Kongber","email":"kongmongolia@gmail.com","commits":15,"avatar":"https://avatars.githubusercontent.com/Kongber?v=4","url":"https://github.com/Kongber"}]},"filePathRelative":"notes/C.safe/C1.cipher/algorithm/pkcs11.md","headers":[],"categoryList":[{"id":"4358b5","sort":10000,"name":"notes"},{"id":"63b13f","sort":10005,"name":"C.safe"},{"id":"42ad35","sort":10010,"name":"C1.cipher"},{"id":"7adf9c","sort":10007,"name":"algorithm"}]}');export{r as comp,p as data};
